{"name": "test_Get_Group_info", "status": "broken", "statusDetails": {"message": "TypeError: the JSON object must be str, bytes or bytearray, not list", "trace": "self = <test_01_Get_Group_info.Test_01_Get_Group_info object at 0x0000028070A790A0>\n\n    @allure.feature('【需求点】：获取分组信息')\n    @allure.story('【正常获取】')\n    @allure.severity('normal')\n    def test_Get_Group_info(self):\n        ip = ReadIP().Read()\n        urls = Read_Group_url().Read()\n        url1 = urls['url01']['url']\n        url = ip + url1\n        auth = ReadAuthorization().Read()\n    \n        headers = {\n            'Authorization': auth,\n        }\n        method = 'get'\n        # 发送请求\n        res = RequestTools().send_requests(method=method, url=url, header=headers)\n>       res = json.loads(res)\n\ntest_01_Get_Group_info.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ns = [{'devices': ['0000306E77162578'], 'icon': '/groups/imgs/1.png', 'id': '63a177eb6436300019bc1a23', 'name': '测试分组300959...ces': ['0000306E77162578'], 'icon': '/groups/imgs/1.png', 'id': '63a14ff96436300019bc1913', 'name': '测试分组681125'}, ...]\ncls = None, object_hook = None, parse_float = None, parse_int = None\nparse_constant = None, object_pairs_hook = None, kw = {}\n\n    def loads(s, *, cls=None, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n        \"\"\"Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance\n        containing a JSON document) to a Python object.\n    \n        ``object_hook`` is an optional function that will be called with the\n        result of any object literal decode (a ``dict``). The return value of\n        ``object_hook`` will be used instead of the ``dict``. This feature\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n    \n        ``object_pairs_hook`` is an optional function that will be called with the\n        result of any object literal decoded with an ordered list of pairs.  The\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders.  If ``object_hook``\n        is also defined, the ``object_pairs_hook`` takes priority.\n    \n        ``parse_float``, if specified, will be called with the string\n        of every JSON float to be decoded. By default this is equivalent to\n        float(num_str). This can be used to use another datatype or parser\n        for JSON floats (e.g. decimal.Decimal).\n    \n        ``parse_int``, if specified, will be called with the string\n        of every JSON int to be decoded. By default this is equivalent to\n        int(num_str). This can be used to use another datatype or parser\n        for JSON integers (e.g. float).\n    \n        ``parse_constant``, if specified, will be called with one of the\n        following strings: -Infinity, Infinity, NaN.\n        This can be used to raise an exception if invalid JSON numbers\n        are encountered.\n    \n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n        kwarg; otherwise ``JSONDecoder`` is used.\n        \"\"\"\n        if isinstance(s, str):\n            if s.startswith('\\ufeff'):\n                raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\n                                      s, 0)\n        else:\n            if not isinstance(s, (bytes, bytearray)):\n>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '\n                                f'not {s.__class__.__name__}')\nE               TypeError: the JSON object must be str, bytes or bytearray, not list\n\nG:\\python-3.9.0\\lib\\json\\__init__.py:339: TypeError"}, "start": 1671526488146, "stop": 1671526488178, "uuid": "8eb44e2c-d84e-4a6c-bb19-35a5ec2dd467", "historyId": "e04a93d29630f8510db15afb8b108c5d", "testCaseId": "bccd18929117434bda5d179381def011", "fullName": "Testcase_Group.test_01_Get_Group_info.Test_01_Get_Group_info#test_Get_Group_info", "labels": [{"name": "story", "value": "【正常获取】"}, {"name": "severity", "value": "normal"}, {"name": "feature", "value": "【需求点】：获取分组信息"}, {"name": "parentSuite", "value": "Testcase_Group"}, {"name": "suite", "value": "test_01_Get_Group_info"}, {"name": "subSuite", "value": "Test_01_Get_Group_info"}, {"name": "host", "value": "SIE180286"}, {"name": "thread", "value": "8784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase_Group.test_01_Get_Group_info"}]}