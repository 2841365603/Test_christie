{"name": "test_04_Get_target_Countdown_info", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 236 (char 235)", "trace": "self = <Testcase_Intelligent.test_04_Get_target_Countdown_info.Test_04_Get_target_Countdown_info object at 0x0000018DF04DE790>\n\n    @allure.feature('【需求点】：D004-查询指定倒计时')\n    @allure.story('【正常获取】')\n    @allure.severity('normal')\n    def test_04_Get_target_Countdown_info(self):\n        Countdown_id = Read_countdown_id().Read()\n        Countdown_id = str(Countdown_id)\n        ip = ReadIP().Read()\n        urls = Read_Intelligent_url().Read()\n        url1 = urls['url04']['url']\n        url = ip + url1 + Countdown_id\n        auth = ReadAuthorization().Read()\n        headers = {\n            'Authorization': auth,\n        }\n        method = 'get'\n>       res = RequestTools().send_requests(method=method,url=url,header=headers)\n\ntest_04_Get_target_Countdown_info.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\request_utill.py:70: in send_requests\n    res = json.loads(str(res).replace(\"'\", \"\\\"\"))\nG:\\python-3.9.0\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nG:\\python-3.9.0\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000018DEF184C10>\ns = '{\"name\": \"新建倒计时752203\", \"conditionsRelation\": \"and\", \"condition\": [{\"type\": \"countdown\", \"params\": {\"countdownTime\": ...022-12-22T06:08:08.319Z\", \"createTime\": \"2022-12-22T06:08:08.319Z\", \"enable\": False, \"id\": \"63a3f4486436300019bc1f89\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 236 (char 235)\n\nG:\\python-3.9.0\\lib\\json\\decoder.py:355: JSONDecodeError"}, "start": 1671689301211, "stop": 1671689301230, "uuid": "c2838aef-5a32-4a9f-8abc-6fced2d6a4fa", "historyId": "6c65a601f0936ceb334e57195997e37a", "testCaseId": "e66b147c911a803c15788bf23b28e3aa", "fullName": "Testcase_Intelligent.test_04_Get_target_Countdown_info.Test_04_Get_target_Countdown_info#test_04_Get_target_Countdown_info", "labels": [{"name": "story", "value": "【正常获取】"}, {"name": "severity", "value": "normal"}, {"name": "feature", "value": "【需求点】：D004-查询指定倒计时"}, {"name": "parentSuite", "value": "Testcase_Intelligent"}, {"name": "suite", "value": "test_04_Get_target_Countdown_info"}, {"name": "subSuite", "value": "Test_04_Get_target_Countdown_info"}, {"name": "host", "value": "SIE180286"}, {"name": "thread", "value": "11588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase_Intelligent.test_04_Get_target_Countdown_info"}]}