{"name": "test_Get_all_intelligent", "status": "broken", "statusDetails": {"message": "AttributeError: 'Response' object has no attribute 'read'", "trace": "self = <Testcase_Intelligent.test_01_Get_all_intelligent.Test_01_Get_all_intelligent object at 0x0000028FB7C62580>\n\n    @allure.feature('【需求点】：D001-获取所有智能信息')\n    @allure.story('【正常获取】')\n    @allure.severity('normal')\n    def test_Get_all_intelligent(self):\n        ip = ReadIP().Read()\n        urls = Read_Intelligent_url().Read()\n        url1 = urls['url01']['url']\n        url = ip + url1\n        auth = ReadAuthorization().Read()\n        headers = {\n            'Authorization': auth,\n        }\n        method = 'get'\n        # 发送请求\n>       res = RequestTools1().send_requests1(method=method, url=url, header=headers)\n\ntest_01_Get_all_intelligent.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\request_utill_modify.py:68: in send_requests1\n    res = json.load(res)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfp = <Response [200]>, cls = None, object_hook = None, parse_float = None\nparse_int = None, parse_constant = None, object_pairs_hook = None, kw = {}\n\n    def load(fp, *, cls=None, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n        \"\"\"Deserialize ``fp`` (a ``.read()``-supporting file-like object containing\n        a JSON document) to a Python object.\n    \n        ``object_hook`` is an optional function that will be called with the\n        result of any object literal decode (a ``dict``). The return value of\n        ``object_hook`` will be used instead of the ``dict``. This feature\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n    \n        ``object_pairs_hook`` is an optional function that will be called with the\n        result of any object literal decoded with an ordered list of pairs.  The\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders.  If ``object_hook``\n        is also defined, the ``object_pairs_hook`` takes priority.\n    \n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n        kwarg; otherwise ``JSONDecoder`` is used.\n        \"\"\"\n>       return loads(fp.read(),\n            cls=cls, object_hook=object_hook,\n            parse_float=parse_float, parse_int=parse_int,\n            parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\nE       AttributeError: 'Response' object has no attribute 'read'\n\nG:\\python-3.9.0\\lib\\json\\__init__.py:293: AttributeError"}, "start": 1671613074843, "stop": 1671613074858, "uuid": "1bc27938-ebfc-4c4b-a0b3-f212245fa569", "historyId": "dee0ec546871f9af53161db104963251", "testCaseId": "8eb733272e905110b061a7b806eee99f", "fullName": "Testcase_Intelligent.test_01_Get_all_intelligent.Test_01_Get_all_intelligent#test_Get_all_intelligent", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "【需求点】：D001-获取所有智能信息"}, {"name": "story", "value": "【正常获取】"}, {"name": "parentSuite", "value": "Testcase_Intelligent"}, {"name": "suite", "value": "test_01_Get_all_intelligent"}, {"name": "subSuite", "value": "Test_01_Get_all_intelligent"}, {"name": "host", "value": "SIE180286"}, {"name": "thread", "value": "13120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase_Intelligent.test_01_Get_all_intelligent"}]}