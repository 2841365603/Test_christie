{"name": "test_02_Add_Scene", "status": "broken", "statusDetails": {"message": "NameError: name 'yaml' is not defined", "trace": "self = <Testcase_Scene.test_02_Add_scenes.Test_02_Add_Group object at 0x0000020BE528CDF0>\n\n    @allure.feature('【需求点】：新建场景')\n    @allure.story('【正常获取】')\n    @allure.severity('normal')\n    def test_02_Add_Scene(self):\n        ip = ReadIP().Read()\n        # device_sn = ReadSN().Read()\n        urls = Read_Scene_url().Read()\n        url1 = urls['url02']['url']\n        url = ip + url1\n        auth = ReadAuthorization().Read()\n        Scene_name = \"新建场景\"\n        Scene_number = random.randint(200000,999999)\n        Scene_name = Scene_name + str(Scene_number)\n        picture_list = [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            19\n        ]\n        picture = random.choice(picture_list)\n        picture = str(picture)\n        icon_number = \"/scenes/imgs/x.png\"\n        icon_number = icon_number.replace('x',picture)\n        data = {\n            \"name\":Scene_name,\n            \"icon\":icon_number\n        }\n    \n        headers = {\n            'Authorization': auth,\n        }\n        method = 'post'\n        # 发送请求\n        res = RequestTools().send_requests(method=method, url=url, header=headers, data=data)\n        print(\"-----------------------------------\")\n        print(type(res))\n        print(res)\n        print(\"-----------------------------------\")\n        print(res['id'])\n    \n        # group_id = str(res[-28:-4:])\n        # # 断言返回字符串中包含name\n        # assert \"name\" in res\n        # return group_id\n    \n        with open(r\"G:\\pycharm\\pythonProject\\Test_christie\\Testdata\\Scene_id.yaml\", \"w\" , encoding='utf-8') as f :\n            data = {\n                \"name\":res['id']\n            }\n            # allow_unicode=True，解决存储时unicode编码问题。\n            # sort_keys=False，解决写入yaml的数据则不会排序后写入。\n>           f.write(yaml.dump(data,allow_unicode=True , sort_keys=False))\nE           NameError: name 'yaml' is not defined\n\ntest_02_Add_scenes.py:76: NameError"}, "start": 1671523104277, "stop": 1671523104303, "uuid": "836a3f43-eba8-4e5e-9f11-b679d45d1649", "historyId": "cca8a1c6fa74a169b42f3e04ef8af54d", "testCaseId": "fda930c3e83d11661bbea0707912a408", "fullName": "Testcase_Scene.test_02_Add_scenes.Test_02_Add_Group#test_02_Add_Scene", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "【需求点】：新建场景"}, {"name": "story", "value": "【正常获取】"}, {"name": "parentSuite", "value": "Testcase_Scene"}, {"name": "suite", "value": "test_02_Add_scenes"}, {"name": "subSuite", "value": "Test_02_Add_Group"}, {"name": "host", "value": "SIE180286"}, {"name": "thread", "value": "13800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase_Scene.test_02_Add_scenes"}]}